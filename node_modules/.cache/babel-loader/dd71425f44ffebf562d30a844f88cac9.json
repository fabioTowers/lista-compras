{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fabio Mendes\\\\Documents\\\\lista-compras\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport imagem from './remove.png';\n/*\r\nfunction Item (props) {\r\n    const [produto, setProduto] = useState(props.produto)\r\n    const [qtd, setQtd] = useState(props.qtd)\r\n    return <div className=\"umItem\">\r\n        <input type=\"checkbox\" name=\"riscar\" id=\"\"></input>\r\n        <input type=\"text\" value={produto} className=\"campo\" id=\"tfProd\" onChange={e => setProduto(e.target.value)}></input>\r\n        <label for=\"preco\"> R$ </label>\r\n        <input id=\"preco\" type=\"text\" className=\"campo\" id=\"tfPreco\" onChange={e =>{props.somaPreco(+e.target.value)}}></input>\r\n        <label for=\"qtd\">   Qtd. </label>\r\n        <input id=\"qtd\" type=\"number\" min=\"1\" value={qtd} className=\"campo\" id=\"tfQtd\" onChange={e => setQtd(e.target.value)}></input>\r\n        <span> Subtotal R$ </span>\r\n    </div>\r\n}\r\n\r\nclass Lista extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            total: 0.00\r\n        }\r\n    }\r\n    \r\n    soma = (novoValor, valorAntigo) => {\r\n        this.setState({\r\n            total: (this.state.total - valorAntigo) + novoValor\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"lista\">\r\n                <div className=\"divHeaderLista\">{\"Título da lista\"}\r\n                    <br/>\r\n                    Adicionar item <input type=\"text\" className=\"campoHeaderItem\"></input> Qtd. <input type=\"number\" min=\"1\" className=\"campoHeaderQtd\"></input> <button className=\"btnAdicionar\">Adicionar</button>\r\n                </div>\r\n                <div className=\"conteudo\">\r\n                    <Item produto=\"Pão de batata\"\r\n                        qtd=\"3\"\r\n                        somaPreco={this.soma}></Item>\r\n                    <Item produto=\"Sanduiche\"\r\n                        preco=\"5,42\"\r\n                        qtd=\"1\"\r\n                        somaPreco={this.soma}></Item>\r\n                </div>\r\n                <div>Total R$ {this.state.total}</div>\r\n            </div>\r\n        )\r\n    }\r\n}*/\n\nclass Lista extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.soma = (indice, novoValor) => {\n      //alert(\"indice: \" + indice + \"; novo valor: \" + novoValor);\n      var subTotalAntigo;\n      this.setState(state => {\n        const itens = state.itens.map((item, pos) => {\n          if (pos === indice) {\n            //alert(\"índice: \" + pos + \"; novo valor: \" + novoValor + \"; valor antigo: \" + item.preco);\n            //Esse trecho exibe um warning no console\n            //this.state.total = (this.state.total - item.subTotal) + (item.qtd * novoValor);\n            //Abaixo está a correção do warning\n            //this.setState({total: (this.state.total - item.subTotal) + (item.qtd * novoValor)})\n            subTotalAntigo = item.subTotal;\n            item.subTotal = item.qtd * novoValor;\n            item.preco = novoValor;\n            return item;\n          } else {\n            return item;\n          }\n        }); //fim da funçao map\n\n        return {\n          itens\n        };\n      }); //fim de setState\n\n      this.setState({\n        total: this.state.total - subTotalAntigo + itens.qtd * novoValor\n      });\n    };\n\n    this.modificaQtd = (indice, novoQtd) => {\n      this.setState(state => {\n        const itens = state.itens.map((item, pos) => {\n          if (pos === indice) {\n            //A linha abaixo dispara um warning no console\n            //this.state.total = (this.state.total - item.subTotal) + (item.preco * novoQtd);\n            //A linha abaixo corrige as mensagens de warning\n            this.setState({\n              total: this.state.total - item.subTotal + item.preco * novoQtd\n            });\n            item.subTotal = item.preco * novoQtd;\n            item.qtd = novoQtd;\n            return item;\n          } else {\n            return item;\n          }\n        }); //fim de map\n\n        return {\n          itens\n        };\n      }); //fim do setState\n    };\n\n    this.deletaItem = (indice, produto, subtotal) => {\n      if (window.confirm(\"Deseja deletar o item \" + produto + \"?\")) {\n        this.setState(state => {\n          const itens = state.itens.filter((item, pos) => indice !== pos);\n          this.setState(state => ({\n            total: this.state.total - subtotal\n          }));\n          return {\n            itens\n          };\n        });\n      }\n    };\n\n    this.modificaProduto = (indice, novoNome) => {\n      this.setState(state => {\n        const itens = state.itens.map((item, pos) => {\n          if (pos === indice) {\n            item.produto = novoNome;\n            return item;\n          } else {\n            return item;\n          }\n        }); //fim de map\n\n        return {\n          itens\n        };\n      }); //fim do setState\n    };\n\n    this.riscarItem = indice => {\n      this.setState(state => {\n        const itens = state.itens.map((item, pos) => {\n          if (pos === indice) {\n            item.riscado = !item.riscado;\n            return item;\n          } else {\n            return item;\n          }\n        }); //fim de map\n\n        return {\n          itens\n        };\n      }); //fim do setState\n    };\n\n    this.state = {\n      itens: [],\n      produto: '',\n      qtd: 1,\n      total: 0.00\n    };\n    this.setProduto = this.setProduto.bind(this);\n    this.setQtd = this.setQtd.bind(this);\n    this.adicionarItem = this.adicionarItem.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lista\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divHeaderLista\",\n        children: [\"Título da lista\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), \"Adicionar item \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"campoHeaderItem\",\n          onChange: this.setProduto,\n          value: this.state.produto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 36\n        }, this), \" Qtd. \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          className: \"campoHeaderQtd\",\n          onChange: this.setQtd,\n          value: this.state.qtd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 151\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnAdicionar\",\n          onClick: this.adicionarItem,\n          children: \"Adicionar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 262\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conteudo\",\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          itens: this.state.itens,\n          somaPreco: this.soma,\n          modQtd: this.modificaQtd,\n          del: this.deletaItem,\n          modProd: this.modificaProduto,\n          risca: this.riscarItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Total R$ \", this.state.total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this); //fim do return\n  } //fim do render\n\n\n  setProduto(e) {\n    this.setState({\n      produto: e.target.value\n    });\n  }\n\n  setQtd(e) {\n    this.setState({\n      qtd: e.target.value\n    });\n  }\n\n  adicionarItem(e) {\n    e.preventDefault();\n\n    if (this.state.produto.length === 0) {\n      return;\n    }\n\n    const newItem = {\n      produto: this.state.produto,\n      id: Date.now(),\n      qtd: this.state.qtd,\n      preco: 0.00,\n      subTotal: 0.00,\n      riscado: false\n    };\n    this.setState(state => ({\n      itens: state.itens.concat(newItem),\n      produto: '',\n      qtd: 1\n    }));\n  } //fim do método adicionarItem()\n\n\n} //fim da classe (component) lista\n\n\nfunction Item(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", props.itens.map((item, indice) =>\n    /*#__PURE__*/\n    //antes era umItem\n    _jsxDEV(\"div\", {\n      className: \"umItem\",\n      style: {\n        opacity: item.riscado ? 0.5 : 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"riscar\",\n        id: \"\",\n        onChange: e => {\n          props.risca(indice);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: item.produto,\n        className: \"campo\",\n        id: \"tfProd\",\n        onChange: e => {\n          props.modProd(indice, e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"preco\",\n        children: \" R$ \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"campo\",\n        id: \"tfPreco\",\n        onChange: e => {\n          props.somaPreco(indice, +e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"qtd\",\n        children: \"   Qtd. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: item.qtd,\n        min: \"1\",\n        className: \"campo\",\n        id: \"tfQtd\",\n        onChange: e => {\n          props.modQtd(indice, +e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Subtotal R$ \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), \" \", item.subTotal, /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/#\",\n        id: \"linkDel\",\n        onClick: e => {\n          props.del(indice, item.produto, item.subTotal);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imagem,\n          alt: \"Remover\",\n          height: \"20px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n}\n\n_c = Item;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Lista, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 261,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["C:/Users/Fabio Mendes/Documents/lista-compras/src/index.js"],"names":["React","ReactDOM","imagem","Lista","Component","constructor","props","soma","indice","novoValor","subTotalAntigo","setState","state","itens","map","item","pos","subTotal","qtd","preco","total","modificaQtd","novoQtd","deletaItem","produto","subtotal","window","confirm","filter","modificaProduto","novoNome","riscarItem","riscado","setProduto","bind","setQtd","adicionarItem","render","e","target","value","preventDefault","length","newItem","id","Date","now","concat","Item","opacity","risca","modProd","somaPreco","modQtd","del","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA4EjBC,IA5EiB,GA4EV,CAACC,MAAD,EAASC,SAAT,KAAuB;AAC5B;AACA,UAAIC,cAAJ;AACA,WAAKC,QAAL,CAAeC,KAAK,IAAI;AACtB,cAAMC,KAAK,GAAGD,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAiB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC5C,cAAGA,GAAG,KAAKR,MAAX,EAAkB;AAChB;AAEA;AACA;AACA;AACA;AAEAE,YAAAA,cAAc,GAAGK,IAAI,CAACE,QAAtB;AAEAF,YAAAA,IAAI,CAACE,QAAL,GAAgBF,IAAI,CAACG,GAAL,GAAWT,SAA3B;AACAM,YAAAA,IAAI,CAACI,KAAL,GAAaV,SAAb;AACA,mBAAOM,IAAP;AACD,WAbD,MAaO;AACL,mBAAOA,IAAP;AACD;AACF,SAjBa,CAAd,CADsB,CAkBnB;;AAEH,eAAM;AACJF,UAAAA;AADI,SAAN;AAID,OAxBD,EAH4B,CA2BzB;;AACH,WAAKF,QAAL,CAAc;AAACS,QAAAA,KAAK,EAAG,KAAKR,KAAL,CAAWQ,KAAX,GAAmBV,cAApB,GAAuCG,KAAK,CAACK,GAAN,GAAYT;AAA3D,OAAd;AAED,KA1GgB;;AAAA,SA4GjBY,WA5GiB,GA4GH,CAACb,MAAD,EAASc,OAAT,KAAqB;AACjC,WAAKX,QAAL,CAAeC,KAAK,IAAI;AACtB,cAAMC,KAAK,GAAGD,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAiB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC5C,cAAGA,GAAG,KAAKR,MAAX,EAAkB;AAChB;AACA;AACA;AACA,iBAAKG,QAAL,CAAc;AAACS,cAAAA,KAAK,EAAG,KAAKR,KAAL,CAAWQ,KAAX,GAAmBL,IAAI,CAACE,QAAzB,GAAsCF,IAAI,CAACI,KAAL,GAAaG;AAA3D,aAAd;AACAP,YAAAA,IAAI,CAACE,QAAL,GAAgBF,IAAI,CAACI,KAAL,GAAaG,OAA7B;AACAP,YAAAA,IAAI,CAACG,GAAL,GAAWI,OAAX;AACA,mBAAOP,IAAP;AACD,WARD,MAQO;AACL,mBAAOA,IAAP;AACD;AACF,SAZa,CAAd,CADsB,CAanB;;AAEH,eAAM;AACJF,UAAAA;AADI,SAAN;AAGD,OAlBD,EADiC,CAmB9B;AACJ,KAhIgB;;AAAA,SAkIjBU,UAlIiB,GAkIJ,CAACf,MAAD,EAASgB,OAAT,EAAkBC,QAAlB,KAA+B;AAE1C,UAAIC,MAAM,CAACC,OAAP,CAAe,2BAA2BH,OAA3B,GAAqC,GAApD,CAAJ,EAA+D;AAC7D,aAAKb,QAAL,CAAcC,KAAK,IAAI;AACrB,gBAAMC,KAAK,GAAGD,KAAK,CAACC,KAAN,CAAYe,MAAZ,CAAmB,CAACb,IAAD,EAAOC,GAAP,KAAeR,MAAM,KAAKQ,GAA7C,CAAd;AACA,eAAKL,QAAL,CAAcC,KAAK,KAAK;AACtBQ,YAAAA,KAAK,EAAE,KAAKR,KAAL,CAAWQ,KAAX,GAAmBK;AADJ,WAAL,CAAnB;AAGA,iBAAO;AACLZ,YAAAA;AADK,WAAP;AAGD,SARD;AASD;AACF,KA/IgB;;AAAA,SAiJjBgB,eAjJiB,GAiJC,CAACrB,MAAD,EAASsB,QAAT,KAAsB;AACtC,WAAKnB,QAAL,CAAeC,KAAK,IAAI;AACtB,cAAMC,KAAK,GAAGD,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAiB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC5C,cAAGA,GAAG,KAAKR,MAAX,EAAkB;AAChBO,YAAAA,IAAI,CAACS,OAAL,GAAeM,QAAf;AACA,mBAAOf,IAAP;AACD,WAHD,MAGO;AACL,mBAAOA,IAAP;AACD;AACF,SAPa,CAAd,CADsB,CAQnB;;AAEH,eAAM;AACJF,UAAAA;AADI,SAAN;AAGD,OAbD,EADsC,CAcnC;AACJ,KAhKgB;;AAAA,SAkKjBkB,UAlKiB,GAkKHvB,MAAD,IAAY;AACvB,WAAKG,QAAL,CAAeC,KAAK,IAAI;AACtB,cAAMC,KAAK,GAAGD,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAiB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC5C,cAAGA,GAAG,KAAKR,MAAX,EAAkB;AAChBO,YAAAA,IAAI,CAACiB,OAAL,GAAe,CAACjB,IAAI,CAACiB,OAArB;AACA,mBAAOjB,IAAP;AACD,WAHD,MAGO;AACL,mBAAOA,IAAP;AACD;AACF,SAPa,CAAd,CADsB,CAQnB;;AAEH,eAAM;AACJF,UAAAA;AADI,SAAN;AAGD,OAbD,EADuB,CAcpB;AACJ,KAjLgB;;AAEf,SAAKD,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaW,MAAAA,OAAO,EAAE,EAAtB;AAA0BN,MAAAA,GAAG,EAAE,CAA/B;AAAkCE,MAAAA,KAAK,EAAE;AAAzC,KAAb;AACA,SAAKa,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,MAAL,GAAa,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAb;AACA,SAAKE,aAAL,GAAqB,KAAKA,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,mBAAiC,iBAAjC,eACI;AAAA;AAAA;AAAA;AAAA,gBADJ,kCAEmB;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC,iBAA7B;AAA+C,UAAA,QAAQ,EAAE,KAAKJ,UAA9D;AAA0E,UAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWY;AAA5F;AAAA;AAAA;AAAA;AAAA,gBAFnB,yBAEsI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,GAAG,EAAC,GAAzB;AAA6B,UAAA,SAAS,EAAC,gBAAvC;AAAwD,UAAA,QAAQ,EAAE,KAAKW,MAAvE;AAA+E,UAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWM;AAAjG;AAAA;AAAA;AAAA;AAAA,gBAFtI,oBAEqP;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,OAAO,EAAE,KAAKkB,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFrP;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWC,KAAxB;AACM,UAAA,SAAS,EAAE,KAAKN,IADtB;AAEM,UAAA,MAAM,EAAE,KAAKc,WAFnB;AAGM,UAAA,GAAG,EAAE,KAAKE,UAHhB;AAIM,UAAA,OAAO,EAAE,KAAKM,eAJpB;AAKM,UAAA,KAAK,EAAE,KAAKE;AALlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ,eAaI;AAAA,gCAAe,KAAKnB,KAAL,CAAWQ,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADK,CAqCH;AACH,GA/C6B,CA+C7B;;;AAEDa,EAAAA,UAAU,CAACK,CAAD,EAAI;AACZ,SAAK3B,QAAL,CAAc;AAAEa,MAAAA,OAAO,EAAEc,CAAC,CAACC,MAAF,CAASC;AAApB,KAAd;AACD;;AAEDL,EAAAA,MAAM,CAACG,CAAD,EAAG;AACP,SAAK3B,QAAL,CAAc;AAAEO,MAAAA,GAAG,EAAEoB,CAAC,CAACC,MAAF,CAASC;AAAhB,KAAd;AACD;;AAEDJ,EAAAA,aAAa,CAACE,CAAD,EAAI;AACfA,IAAAA,CAAC,CAACG,cAAF;;AACA,QAAI,KAAK7B,KAAL,CAAWY,OAAX,CAAmBkB,MAAnB,KAA8B,CAAlC,EAAqC;AACnC;AACD;;AACD,UAAMC,OAAO,GAAG;AACdnB,MAAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWY,OADN;AAEdoB,MAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAFU;AAGd5B,MAAAA,GAAG,EAAE,KAAKN,KAAL,CAAWM,GAHF;AAIdC,MAAAA,KAAK,EAAE,IAJO;AAKdF,MAAAA,QAAQ,EAAE,IALI;AAMde,MAAAA,OAAO,EAAE;AANK,KAAhB;AAQA,SAAKrB,QAAL,CAAcC,KAAK,KAAK;AACtBC,MAAAA,KAAK,EAAED,KAAK,CAACC,KAAN,CAAYkC,MAAZ,CAAmBJ,OAAnB,CADe;AAEtBnB,MAAAA,OAAO,EAAE,EAFa;AAGtBN,MAAAA,GAAG,EAAE;AAHiB,KAAL,CAAnB;AAKD,GA3E6B,CA2E7B;;;AA3E6B,C,CAoLnC;;;AAED,SAAS8B,IAAT,CAAe1C,KAAf,EAAsB;AAElB,sBAAO;AAAA,oBAAIA,KAAK,CAACO,KAAN,CAAYC,GAAZ,CAAiB,CAACC,IAAD,EAAOP,MAAP;AAAA;AACpB;AACA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAsC,MAAA,KAAK,EAAE;AAACyC,QAAAA,OAAO,EAAElC,IAAI,CAACiB,OAAL,GAAe,GAAf,GAAqB;AAA/B,OAA7C;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,QAA5B;AAAqC,QAAA,EAAE,EAAC,EAAxC;AAA2C,QAAA,QAAQ,EAAEM,CAAC,IAAI;AAAChC,UAAAA,KAAK,CAAC4C,KAAN,CAAY1C,MAAZ;AAAoB;AAA/E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,YAAY,EAAEO,IAAI,CAACS,OAAtC;AAA+C,QAAA,SAAS,EAAC,OAAzD;AAAiE,QAAA,EAAE,EAAC,QAApE;AAA6E,QAAA,QAAQ,EAAEc,CAAC,IAAI;AAAChC,UAAAA,KAAK,CAAC6C,OAAN,CAAc3C,MAAd,EAAsB8B,CAAC,CAACC,MAAF,CAASC,KAA/B;AAAsC;AAAnI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAqC,QAAA,EAAE,EAAC,SAAxC;AAAkD,QAAA,QAAQ,EAAEF,CAAC,IAAG;AAAChC,UAAAA,KAAK,CAAC8C,SAAN,CAAgB5C,MAAhB,EAAwB,CAAC8B,CAAC,CAACC,MAAF,CAASC,KAAlC;AAAyC;AAA1G;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAEzB,IAAI,CAACG,GAAjC;AAAsC,QAAA,GAAG,EAAC,GAA1C;AAA8C,QAAA,SAAS,EAAC,OAAxD;AAAgE,QAAA,EAAE,EAAC,OAAnE;AAA2E,QAAA,QAAQ,EAAEoB,CAAC,IAAG;AAAChC,UAAAA,KAAK,CAAC+C,MAAN,CAAa7C,MAAb,EAAqB,CAAC8B,CAAC,CAACC,MAAF,CAASC,KAA/B;AAAsC;AAAhI;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,OAOgCzB,IAAI,CAACE,QAPrC,eAQI;AAAG,QAAA,IAAI,EAAC,IAAR;AAAa,QAAA,EAAE,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAEqB,CAAC,IAAI;AAAChC,UAAAA,KAAK,CAACgD,GAAN,CAAU9C,MAAV,EAAkBO,IAAI,CAACS,OAAvB,EAAgCT,IAAI,CAACE,QAArC;AAA+C,SAAxF;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEf,MAAV;AAAkB,UAAA,GAAG,EAAE,SAAvB;AAAkC,UAAA,MAAM,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA,OAA6Ba,IAAI,CAAC6B,EAAlC;AAAA;AAAA;AAAA;AAAA,YAFG,CAAJ;AAAA,kBAAP;AAgBH;;KAlBQI,I;AAoBT/C,QAAQ,CAACoC,MAAT,eACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,QADJ,EAEIkB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css'\r\nimport imagem from './remove.png';\r\n\r\n/*\r\nfunction Item (props) {\r\n    const [produto, setProduto] = useState(props.produto)\r\n    const [qtd, setQtd] = useState(props.qtd)\r\n    return <div className=\"umItem\">\r\n        <input type=\"checkbox\" name=\"riscar\" id=\"\"></input>\r\n        <input type=\"text\" value={produto} className=\"campo\" id=\"tfProd\" onChange={e => setProduto(e.target.value)}></input>\r\n        <label for=\"preco\"> R$ </label>\r\n        <input id=\"preco\" type=\"text\" className=\"campo\" id=\"tfPreco\" onChange={e =>{props.somaPreco(+e.target.value)}}></input>\r\n        <label for=\"qtd\">   Qtd. </label>\r\n        <input id=\"qtd\" type=\"number\" min=\"1\" value={qtd} className=\"campo\" id=\"tfQtd\" onChange={e => setQtd(e.target.value)}></input>\r\n        <span> Subtotal R$ </span>\r\n    </div>\r\n}\r\n\r\nclass Lista extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            total: 0.00\r\n        }\r\n    }\r\n    \r\n    soma = (novoValor, valorAntigo) => {\r\n        this.setState({\r\n            total: (this.state.total - valorAntigo) + novoValor\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"lista\">\r\n                <div className=\"divHeaderLista\">{\"Título da lista\"}\r\n                    <br/>\r\n                    Adicionar item <input type=\"text\" className=\"campoHeaderItem\"></input> Qtd. <input type=\"number\" min=\"1\" className=\"campoHeaderQtd\"></input> <button className=\"btnAdicionar\">Adicionar</button>\r\n                </div>\r\n                <div className=\"conteudo\">\r\n                    <Item produto=\"Pão de batata\"\r\n                        qtd=\"3\"\r\n                        somaPreco={this.soma}></Item>\r\n                    <Item produto=\"Sanduiche\"\r\n                        preco=\"5,42\"\r\n                        qtd=\"1\"\r\n                        somaPreco={this.soma}></Item>\r\n                </div>\r\n                <div>Total R$ {this.state.total}</div>\r\n            </div>\r\n        )\r\n    }\r\n}*/\r\n\r\nclass Lista extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { itens: [], produto: '', qtd: 1, total: 0.00};\r\n        this.setProduto = this.setProduto.bind(this);\r\n        this.setQtd =this.setQtd.bind(this);\r\n        this.adicionarItem = this.adicionarItem.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"lista\">\r\n                <div className=\"divHeaderLista\">{\"Título da lista\"}\r\n                    <br/>\r\n                    Adicionar item <input type=\"text\" className=\"campoHeaderItem\" onChange={this.setProduto} value={this.state.produto}></input> Qtd. <input type=\"number\" min=\"1\" className=\"campoHeaderQtd\" onChange={this.setQtd} value={this.state.qtd}></input> <button className=\"btnAdicionar\" onClick={this.adicionarItem}>Adicionar</button>\r\n                </div>\r\n                <div className=\"conteudo\">\r\n                    <Item itens={this.state.itens} \r\n                          somaPreco={this.soma} \r\n                          modQtd={this.modificaQtd} \r\n                          del={this.deletaItem} \r\n                          modProd={this.modificaProduto}\r\n                          risca={this.riscarItem}/>\r\n                </div>\r\n                <div>Total R$ {this.state.total}</div>\r\n            \r\n\r\n          {/*<div>\r\n            <h3>Tarefas</h3>\r\n            <TodoList items={this.state.items} />\r\n            <form onSubmit={this.handleSubmit}>\r\n              <label htmlFor=\"new-todo\">\r\n                O que precisa ser feito?\r\n              </label>\r\n              <input\r\n                id=\"new-todo\"\r\n                onChange={this.handleChange}\r\n                value={this.state.text}\r\n              />\r\n              <button>\r\n                Adicionar #{this.state.items.length + 1}\r\n              </button>\r\n            </form>\r\n          </div>*/}\r\n\r\n            </div>\r\n        );//fim do return\r\n      }//fim do render\r\n\r\n      setProduto(e) {\r\n        this.setState({ produto: e.target.value });\r\n      }\r\n\r\n      setQtd(e){\r\n        this.setState({ qtd: e.target.value });\r\n      }\r\n\r\n      adicionarItem(e) {\r\n        e.preventDefault();\r\n        if (this.state.produto.length === 0) {\r\n          return;\r\n        }\r\n        const newItem = {\r\n          produto: this.state.produto,\r\n          id: Date.now(),\r\n          qtd: this.state.qtd,\r\n          preco: 0.00,\r\n          subTotal: 0.00,\r\n          riscado: false\r\n        };\r\n        this.setState(state => ({\r\n          itens: state.itens.concat(newItem),\r\n          produto: '',\r\n          qtd: 1\r\n        }));\r\n      }//fim do método adicionarItem()\r\n\r\n      soma = (indice, novoValor) => {\r\n        //alert(\"indice: \" + indice + \"; novo valor: \" + novoValor);\r\n        var subTotalAntigo\r\n        this.setState( state => {\r\n          const itens = state.itens.map( (item, pos) => {\r\n            if(pos === indice){\r\n              //alert(\"índice: \" + pos + \"; novo valor: \" + novoValor + \"; valor antigo: \" + item.preco);\r\n\r\n              //Esse trecho exibe um warning no console\r\n              //this.state.total = (this.state.total - item.subTotal) + (item.qtd * novoValor);\r\n              //Abaixo está a correção do warning\r\n              //this.setState({total: (this.state.total - item.subTotal) + (item.qtd * novoValor)})\r\n\r\n              subTotalAntigo = item.subTotal;\r\n\r\n              item.subTotal = item.qtd * novoValor;\r\n              item.preco = novoValor;\r\n              return item;\r\n            } else {\r\n              return item;\r\n            }\r\n          });//fim da funçao map\r\n\r\n          return{\r\n            itens,\r\n          };\r\n\r\n        });//fim de setState\r\n        this.setState({total: (this.state.total - subTotalAntigo) + (itens.qtd * novoValor)})\r\n\r\n      }//fim da funçao soma\r\n\r\n      modificaQtd = (indice, novoQtd) => {\r\n        this.setState( state => {\r\n          const itens = state.itens.map( (item, pos) => {\r\n            if(pos === indice){\r\n              //A linha abaixo dispara um warning no console\r\n              //this.state.total = (this.state.total - item.subTotal) + (item.preco * novoQtd);\r\n              //A linha abaixo corrige as mensagens de warning\r\n              this.setState({total: (this.state.total - item.subTotal) + (item.preco * novoQtd)})\r\n              item.subTotal = item.preco * novoQtd;\r\n              item.qtd = novoQtd;\r\n              return item;\r\n            } else {\r\n              return item;\r\n            }\r\n          });//fim de map\r\n\r\n          return{\r\n            itens,\r\n          };\r\n        });//fim do setState\r\n      }\r\n\r\n      deletaItem = (indice, produto, subtotal) => {\r\n        \r\n        if( window.confirm(\"Deseja deletar o item \" + produto + \"?\") ) {\r\n          this.setState(state => {\r\n            const itens = state.itens.filter((item, pos) => indice !== pos);\r\n            this.setState(state => ({\r\n              total: this.state.total - subtotal\r\n            }));\r\n            return {\r\n              itens,\r\n            };\r\n          });\r\n        }\r\n      };\r\n\r\n      modificaProduto = (indice, novoNome) => {\r\n        this.setState( state => {\r\n          const itens = state.itens.map( (item, pos) => {\r\n            if(pos === indice){\r\n              item.produto = novoNome;\r\n              return item;\r\n            } else {\r\n              return item;\r\n            }\r\n          });//fim de map\r\n\r\n          return{\r\n            itens,\r\n          };\r\n        });//fim do setState\r\n      }\r\n\r\n      riscarItem = (indice) => {\r\n        this.setState( state => {\r\n          const itens = state.itens.map( (item, pos) => {\r\n            if(pos === indice){\r\n              item.riscado = !item.riscado;\r\n              return item;\r\n            } else {\r\n              return item;\r\n            }\r\n          });//fim de map\r\n\r\n          return{\r\n            itens,\r\n          };\r\n        });//fim do setState\r\n      }\r\n\r\n}//fim da classe (component) lista\r\n\r\nfunction Item (props) {\r\n    \r\n    return <> {props.itens.map( (item, indice) => (\r\n            //antes era umItem\r\n            <div className=\"umItem\" key={item.id} style={{opacity: item.riscado ? 0.5 : 1}}>\r\n                <input type=\"checkbox\" name=\"riscar\" id=\"\" onChange={e => {props.risca(indice)}}></input>\r\n                <input type=\"text\" defaultValue={item.produto} className=\"campo\" id=\"tfProd\" onChange={e => {props.modProd(indice, e.target.value)} }></input>\r\n                <label htmlFor=\"preco\"> R$ </label>\r\n                <input type=\"text\" className=\"campo\" id=\"tfPreco\" onChange={e =>{props.somaPreco(indice, +e.target.value)}}></input>\r\n                <label htmlFor=\"qtd\">   Qtd. </label>\r\n                <input type=\"number\" value={item.qtd} min=\"1\" className=\"campo\" id=\"tfQtd\" onChange={e =>{props.modQtd(indice, +e.target.value)}}></input>\r\n                <span> Subtotal R$ </span> {item.subTotal}\r\n                <a href=\"/#\" id=\"linkDel\" onClick={e => {props.del(indice, item.produto, item.subTotal)} }>\r\n                  <img src={imagem} alt={\"Remover\"} height={\"20px\"}/>\r\n                </a>\r\n           </div>\r\n           ))}\r\n          </>\r\n}\r\n\r\nReactDOM.render(\r\n    <Lista></Lista>,\r\n    document.getElementById('root')\r\n)\r\n"]},"metadata":{},"sourceType":"module"}