{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Fabio Mendes\\\\Documents\\\\lista-compras\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\n/*\r\nfunction Item (props) {\r\n    const [produto, setProduto] = useState(props.produto)\r\n    const [qtd, setQtd] = useState(props.qtd)\r\n    return <div className=\"umItem\">\r\n        <input type=\"checkbox\" name=\"riscar\" id=\"\"></input>\r\n        <input type=\"text\" value={produto} className=\"campo\" id=\"tfProd\" onChange={e => setProduto(e.target.value)}></input>\r\n        <label for=\"preco\"> R$ </label>\r\n        <input id=\"preco\" type=\"text\" className=\"campo\" id=\"tfPreco\" onChange={e =>{props.somaPreco(+e.target.value)}}></input>\r\n        <label for=\"qtd\">   Qtd. </label>\r\n        <input id=\"qtd\" type=\"number\" min=\"1\" value={qtd} className=\"campo\" id=\"tfQtd\" onChange={e => setQtd(e.target.value)}></input>\r\n        <span> Subtotal R$ </span>\r\n    </div>\r\n}\r\n\r\nclass Lista extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            total: 0.00\r\n        }\r\n    }\r\n    \r\n    soma = (novoValor, valorAntigo) => {\r\n        this.setState({\r\n            total: (this.state.total - valorAntigo) + novoValor\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"lista\">\r\n                <div className=\"divHeaderLista\">{\"Título da lista\"}\r\n                    <br/>\r\n                    Adicionar item <input type=\"text\" className=\"campoHeaderItem\"></input> Qtd. <input type=\"number\" min=\"1\" className=\"campoHeaderQtd\"></input> <button className=\"btnAdicionar\">Adicionar</button>\r\n                </div>\r\n                <div className=\"conteudo\">\r\n                    <Item produto=\"Pão de batata\"\r\n                        qtd=\"3\"\r\n                        somaPreco={this.soma}></Item>\r\n                    <Item produto=\"Sanduiche\"\r\n                        preco=\"5,42\"\r\n                        qtd=\"1\"\r\n                        somaPreco={this.soma}></Item>\r\n                </div>\r\n                <div>Total R$ {this.state.total}</div>\r\n            </div>\r\n        )\r\n    }\r\n}*/\n\nfunction Item(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", props.itens.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"umItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"riscar\",\n        id: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: item.text,\n        className: \"campo\",\n        id: \"tfProd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"preco\",\n        children: \" R$ \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"preco\",\n        type: \"text\",\n        className: \"campo\",\n        id: \"tfPreco\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"qtd\",\n        children: \"   Qtd. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"qtd\",\n        type: \"number\",\n        min: \"1\",\n        className: \"campo\",\n        id: \"tfQtd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Subtotal R$ \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n}\n\n_c = Item;\n\nclass Lista extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itens: [],\n      text: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lista\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divHeaderLista\",\n        children: [\"Título da lista\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), \"Adicionar item \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"campoHeaderItem\",\n          onChange: this.handleChange,\n          value: this.state.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 36\n        }, this), \" Qtd. \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"1\",\n          className: \"campoHeaderQtd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 150\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btnAdicionar\",\n          onClick: this.handleSubmit,\n          children: \"Adicionar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 215\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conteudo\",\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          itens: this.state.items\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Total R$ \", this.state.total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this); //fim do return\n  } //fim do render\n\n\n  handleChange(e) {\n    this.setState({\n      text: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.text.length === 0) {\n      return;\n    }\n\n    const newItem = {\n      text: this.state.text,\n      id: Date.now()\n    };\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      text: ''\n    }));\n  }\n\n} //fim da classe (component) lista\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Lista, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 137,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["C:/Users/Fabio Mendes/Documents/lista-compras/src/index.js"],"names":["React","useState","ReactDOM","Item","props","itens","map","item","text","id","Lista","Component","constructor","state","handleChange","bind","handleSubmit","render","items","total","e","setState","target","value","preventDefault","length","newItem","Date","now","concat","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css'\r\n\r\n/*\r\nfunction Item (props) {\r\n    const [produto, setProduto] = useState(props.produto)\r\n    const [qtd, setQtd] = useState(props.qtd)\r\n    return <div className=\"umItem\">\r\n        <input type=\"checkbox\" name=\"riscar\" id=\"\"></input>\r\n        <input type=\"text\" value={produto} className=\"campo\" id=\"tfProd\" onChange={e => setProduto(e.target.value)}></input>\r\n        <label for=\"preco\"> R$ </label>\r\n        <input id=\"preco\" type=\"text\" className=\"campo\" id=\"tfPreco\" onChange={e =>{props.somaPreco(+e.target.value)}}></input>\r\n        <label for=\"qtd\">   Qtd. </label>\r\n        <input id=\"qtd\" type=\"number\" min=\"1\" value={qtd} className=\"campo\" id=\"tfQtd\" onChange={e => setQtd(e.target.value)}></input>\r\n        <span> Subtotal R$ </span>\r\n    </div>\r\n}\r\n\r\nclass Lista extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            total: 0.00\r\n        }\r\n    }\r\n    \r\n    soma = (novoValor, valorAntigo) => {\r\n        this.setState({\r\n            total: (this.state.total - valorAntigo) + novoValor\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"lista\">\r\n                <div className=\"divHeaderLista\">{\"Título da lista\"}\r\n                    <br/>\r\n                    Adicionar item <input type=\"text\" className=\"campoHeaderItem\"></input> Qtd. <input type=\"number\" min=\"1\" className=\"campoHeaderQtd\"></input> <button className=\"btnAdicionar\">Adicionar</button>\r\n                </div>\r\n                <div className=\"conteudo\">\r\n                    <Item produto=\"Pão de batata\"\r\n                        qtd=\"3\"\r\n                        somaPreco={this.soma}></Item>\r\n                    <Item produto=\"Sanduiche\"\r\n                        preco=\"5,42\"\r\n                        qtd=\"1\"\r\n                        somaPreco={this.soma}></Item>\r\n                </div>\r\n                <div>Total R$ {this.state.total}</div>\r\n            </div>\r\n        )\r\n    }\r\n}*/\r\n\r\nfunction Item (props) {\r\n    return <> {props.itens.map(item => (\r\n            <div className=\"umItem\" key={item.id}>\r\n                <input type=\"checkbox\" name=\"riscar\" id=\"\"></input>\r\n                <input type=\"text\" value={item.text} className=\"campo\" id=\"tfProd\"></input>\r\n                <label for=\"preco\"> R$ </label>\r\n                <input id=\"preco\" type=\"text\" className=\"campo\" id=\"tfPreco\"></input>\r\n                <label for=\"qtd\">   Qtd. </label>\r\n                <input id=\"qtd\" type=\"number\" min=\"1\" className=\"campo\" id=\"tfQtd\"></input>\r\n                <span> Subtotal R$ </span>\r\n           </div>\r\n           ))}\r\n          </>\r\n}\r\n\r\nclass Lista extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { itens: [], text: '' };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"lista\">\r\n                <div className=\"divHeaderLista\">{\"Título da lista\"}\r\n                    <br/>\r\n                    Adicionar item <input type=\"text\" className=\"campoHeaderItem\" onChange={this.handleChange} value={this.state.text}></input> Qtd. <input type=\"number\" min=\"1\" className=\"campoHeaderQtd\"></input> <button className=\"btnAdicionar\" onClick={this.handleSubmit}>Adicionar</button>\r\n                </div>\r\n                <div className=\"conteudo\">\r\n                    <Item itens={this.state.items}/>\r\n                </div>\r\n                <div>Total R$ {this.state.total}</div>\r\n            \r\n\r\n          {/*<div>\r\n            <h3>Tarefas</h3>\r\n            <TodoList items={this.state.items} />\r\n            <form onSubmit={this.handleSubmit}>\r\n              <label htmlFor=\"new-todo\">\r\n                O que precisa ser feito?\r\n              </label>\r\n              <input\r\n                id=\"new-todo\"\r\n                onChange={this.handleChange}\r\n                value={this.state.text}\r\n              />\r\n              <button>\r\n                Adicionar #{this.state.items.length + 1}\r\n              </button>\r\n            </form>\r\n          </div>*/}\r\n\r\n            </div>\r\n        );//fim do return\r\n      }//fim do render\r\n\r\n      handleChange(e) {\r\n        this.setState({ text: e.target.value });\r\n      }\r\n\r\n      handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.state.text.length === 0) {\r\n          return;\r\n        }\r\n        const newItem = {\r\n          text: this.state.text,\r\n          id: Date.now()\r\n        };\r\n        this.setState(state => ({\r\n          items: state.items.concat(newItem),\r\n          text: ''\r\n        }));\r\n      }\r\n\r\n}//fim da classe (component) lista\r\n\r\nReactDOM.render(\r\n    <Lista></Lista>,\r\n    document.getElementById('root')\r\n)"]},"metadata":{},"sourceType":"module"}