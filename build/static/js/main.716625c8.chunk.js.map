{"version":3,"sources":["remove.png","index.js"],"names":["Lista","props","soma","indice","novoValor","setState","total","state","itens","subTotal","qtd","map","item","pos","preco","modificaQtd","novoQtd","deletaItem","produto","subtotal","window","confirm","filter","modificaProduto","novoNome","riscarItem","riscado","setProduto","bind","setQtd","adicionarItem","className","type","onChange","this","value","min","onClick","Item","somaPreco","modQtd","del","modProd","risca","e","target","preventDefault","length","newItem","id","Date","now","concat","React","Component","style","opacity","name","defaultValue","htmlFor","href","src","imagem","alt","height","ReactDOM","render","document","getElementById"],"mappings":"+NAAe,G,MAAA,IAA0B,oCCyDnCA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA2ERC,KAAO,SAACC,EAAQC,GAGd,EAAKC,SAAS,CAACC,MAAQ,EAAKC,MAAMD,MAAQ,EAAKC,MAAMC,MAAML,GAAQM,SAAa,EAAKF,MAAMC,MAAML,GAAQO,IAAMN,IAC/G,EAAKC,UAAU,SAAAE,GAoBb,MAAM,CACJC,MApBYD,EAAMC,MAAMG,KAAK,SAACC,EAAMC,GACpC,OAAGA,IAAQV,GAUTS,EAAKH,SAAWG,EAAKF,IAAMN,EAC3BQ,EAAKE,MAAQV,EACNQ,GAEAA,UAhGE,EA6GjBG,YAAc,SAACZ,EAAQa,GACrB,EAAKX,SAAS,CAACC,MAAQ,EAAKC,MAAMD,MAAQ,EAAKC,MAAMC,MAAML,GAAQM,SAAa,EAAKF,MAAMC,MAAML,GAAQW,MAAQE,IACjH,EAAKX,UAAU,SAAAE,GAeb,MAAM,CACJC,MAfYD,EAAMC,MAAMG,KAAK,SAACC,EAAMC,GACpC,OAAGA,IAAQV,GAKTS,EAAKH,SAAWG,EAAKE,MAAQE,EAC7BJ,EAAKF,IAAMM,EACJJ,GAEAA,UA1HE,EAoIjBK,WAAa,SAACd,EAAQe,EAASC,GAEzBC,OAAOC,QAAQ,yBAA2BH,EAAU,OACtD,EAAKb,SAAS,CAACC,MAAO,EAAKC,MAAMD,MAAQa,IACzC,EAAKd,UAAS,SAAAE,GAKZ,MAAO,CACLC,MALYD,EAAMC,MAAMc,QAAO,SAACV,EAAMC,GAAP,OAAeV,IAAWU,WAzIhD,EAoJjBU,gBAAkB,SAACpB,EAAQqB,GACzB,EAAKnB,UAAU,SAAAE,GAUb,MAAM,CACJC,MAVYD,EAAMC,MAAMG,KAAK,SAACC,EAAMC,GACpC,OAAGA,IAAQV,GACTS,EAAKM,QAAUM,EACRZ,GAEAA,UA3JE,EAqKjBa,WAAa,SAACtB,GACZ,EAAKE,UAAU,SAAAE,GAUb,MAAM,CACJC,MAVYD,EAAMC,MAAMG,KAAK,SAACC,EAAMC,GACpC,OAAGA,IAAQV,GACTS,EAAKc,SAAWd,EAAKc,QACdd,GAEAA,UA1Kb,EAAKL,MAAQ,CAAEC,MAAO,GAAIU,QAAS,GAAIR,IAAK,EAAGJ,MAAO,GACtD,EAAKqB,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,OAAQ,EAAKA,OAAOD,KAAZ,gBACb,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBALN,E,qDASf,OACI,sBAAKG,UAAU,QAAf,UACI,sBAAKA,UAAU,iBAAf,UAAiC,qBAC7B,uBADJ,kBAEmB,uBAAOC,KAAK,OAAOD,UAAU,kBAAkBE,SAAUC,KAAKP,WAAYQ,MAAOD,KAAK3B,MAAMW,UAF/G,SAEsI,uBAAOc,KAAK,SAASI,IAAI,IAAIL,UAAU,iBAAiBE,SAAUC,KAAKL,OAAQM,MAAOD,KAAK3B,MAAMG,MAFvO,IAEqP,wBAAQqB,UAAU,eAAeM,QAASH,KAAKJ,cAA/C,0BAErP,qBAAKC,UAAU,WAAf,SACI,cAACO,EAAD,CAAM9B,MAAO0B,KAAK3B,MAAMC,MAClB+B,UAAWL,KAAKhC,KAChBsC,OAAQN,KAAKnB,YACb0B,IAAKP,KAAKjB,WACVyB,QAASR,KAAKX,gBACdoB,MAAOT,KAAKT,eAEtB,4CAAeS,KAAK3B,MAAMD,c,iCAyBzBsC,GACTV,KAAK7B,SAAS,CAAEa,QAAS0B,EAAEC,OAAOV,U,6BAG7BS,GACLV,KAAK7B,SAAS,CAAEK,IAAKkC,EAAEC,OAAOV,U,oCAGlBS,GAEZ,GADAA,EAAEE,iBACgC,IAA9BZ,KAAK3B,MAAMW,QAAQ6B,OAAvB,CAGA,IAAMC,EAAU,CACd9B,QAASgB,KAAK3B,MAAMW,QACpB+B,GAAIC,KAAKC,MACTzC,IAAKwB,KAAK3B,MAAMG,IAChBI,MAAO,EACPL,SAAU,EACViB,SAAS,GAEXQ,KAAK7B,UAAS,SAAAE,GAAK,MAAK,CACtBC,MAAOD,EAAMC,MAAM4C,OAAOJ,GAC1B9B,QAAS,GACTR,IAAK,W,GAzEK2C,IAAMC,WAyL1B,SAAShB,EAAMrC,GAEX,OAAO,yCAAIA,EAAMO,MAAMG,KAAK,SAACC,EAAMT,GAAP,OAEpB,cADA,CACA,OAAK4B,UAAU,SAAuBwB,MAAO,CAACC,QAAS5C,EAAKc,QAAU,GAAM,GAA5E,UACI,uBAAOM,KAAK,WAAWyB,KAAK,SAASR,GAAG,GAAGhB,SAAU,SAAAW,GAAM3C,EAAM0C,MAAMxC,MACvE,uBAAO6B,KAAK,OAAO0B,aAAc9C,EAAKM,QAASa,UAAU,QAAQkB,GAAG,SAAShB,SAAU,SAAAW,GAAM3C,EAAMyC,QAAQvC,EAAQyC,EAAEC,OAAOV,UAC5H,uBAAOwB,QAAQ,QAAf,kBACA,uBAAO3B,KAAK,OAAOD,UAAU,QAAQkB,GAAG,UAAUhB,SAAU,SAAAW,GAAK3C,EAAMsC,UAAUpC,GAASyC,EAAEC,OAAOV,UACnG,uBAAOwB,QAAQ,MAAf,sBACA,uBAAO3B,KAAK,SAASG,MAAOvB,EAAKF,IAAK0B,IAAI,IAAIL,UAAU,QAAQkB,GAAG,QAAQhB,SAAU,SAAAW,GAAK3C,EAAMuC,OAAOrC,GAASyC,EAAEC,OAAOV,UACzH,iDAPJ,IAOgCvB,EAAKH,SACjC,mBAAGmD,KAAK,KAAKX,GAAG,UAAUZ,QAAS,SAAAO,GAAM3C,EAAMwC,IAAItC,EAAQS,EAAKM,QAASN,EAAKH,WAA9E,SACE,qBAAKoD,IAAKC,EAAQC,IAAK,UAAWC,OAAQ,aATnBpD,EAAKqC,UAgB9CgB,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.716625c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/remove.4b7c48aa.png\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style.css'\r\nimport imagem from './remove.png';\r\n\r\n/*\r\nfunction Item (props) {\r\n    const [produto, setProduto] = useState(props.produto)\r\n    const [qtd, setQtd] = useState(props.qtd)\r\n    return <div className=\"umItem\">\r\n        <input type=\"checkbox\" name=\"riscar\" id=\"\"></input>\r\n        <input type=\"text\" value={produto} className=\"campo\" id=\"tfProd\" onChange={e => setProduto(e.target.value)}></input>\r\n        <label for=\"preco\"> R$ </label>\r\n        <input id=\"preco\" type=\"text\" className=\"campo\" id=\"tfPreco\" onChange={e =>{props.somaPreco(+e.target.value)}}></input>\r\n        <label for=\"qtd\">   Qtd. </label>\r\n        <input id=\"qtd\" type=\"number\" min=\"1\" value={qtd} className=\"campo\" id=\"tfQtd\" onChange={e => setQtd(e.target.value)}></input>\r\n        <span> Subtotal R$ </span>\r\n    </div>\r\n}\r\n\r\nclass Lista extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            total: 0.00\r\n        }\r\n    }\r\n    \r\n    soma = (novoValor, valorAntigo) => {\r\n        this.setState({\r\n            total: (this.state.total - valorAntigo) + novoValor\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"lista\">\r\n                <div className=\"divHeaderLista\">{\"Título da lista\"}\r\n                    <br/>\r\n                    Adicionar item <input type=\"text\" className=\"campoHeaderItem\"></input> Qtd. <input type=\"number\" min=\"1\" className=\"campoHeaderQtd\"></input> <button className=\"btnAdicionar\">Adicionar</button>\r\n                </div>\r\n                <div className=\"conteudo\">\r\n                    <Item produto=\"Pão de batata\"\r\n                        qtd=\"3\"\r\n                        somaPreco={this.soma}></Item>\r\n                    <Item produto=\"Sanduiche\"\r\n                        preco=\"5,42\"\r\n                        qtd=\"1\"\r\n                        somaPreco={this.soma}></Item>\r\n                </div>\r\n                <div>Total R$ {this.state.total}</div>\r\n            </div>\r\n        )\r\n    }\r\n}*/\r\n\r\nclass Lista extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { itens: [], produto: '', qtd: 1, total: 0.00};\r\n        this.setProduto = this.setProduto.bind(this);\r\n        this.setQtd =this.setQtd.bind(this);\r\n        this.adicionarItem = this.adicionarItem.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"lista\">\r\n                <div className=\"divHeaderLista\">{\"Título da lista\"}\r\n                    <br/>\r\n                    Adicionar item <input type=\"text\" className=\"campoHeaderItem\" onChange={this.setProduto} value={this.state.produto}></input> Qtd. <input type=\"number\" min=\"1\" className=\"campoHeaderQtd\" onChange={this.setQtd} value={this.state.qtd}></input> <button className=\"btnAdicionar\" onClick={this.adicionarItem}>Adicionar</button>\r\n                </div>\r\n                <div className=\"conteudo\">\r\n                    <Item itens={this.state.itens} \r\n                          somaPreco={this.soma} \r\n                          modQtd={this.modificaQtd} \r\n                          del={this.deletaItem} \r\n                          modProd={this.modificaProduto}\r\n                          risca={this.riscarItem}/>\r\n                </div>\r\n                <div>Total R$ {this.state.total}</div>\r\n            \r\n\r\n          {/*<div>\r\n            <h3>Tarefas</h3>\r\n            <TodoList items={this.state.items} />\r\n            <form onSubmit={this.handleSubmit}>\r\n              <label htmlFor=\"new-todo\">\r\n                O que precisa ser feito?\r\n              </label>\r\n              <input\r\n                id=\"new-todo\"\r\n                onChange={this.handleChange}\r\n                value={this.state.text}\r\n              />\r\n              <button>\r\n                Adicionar #{this.state.items.length + 1}\r\n              </button>\r\n            </form>\r\n          </div>*/}\r\n\r\n            </div>\r\n        );//fim do return\r\n      }//fim do render\r\n\r\n      setProduto(e) {\r\n        this.setState({ produto: e.target.value });\r\n      }\r\n\r\n      setQtd(e){\r\n        this.setState({ qtd: e.target.value });\r\n      }\r\n\r\n      adicionarItem(e) {\r\n        e.preventDefault();\r\n        if (this.state.produto.length === 0) {\r\n          return;\r\n        }\r\n        const newItem = {\r\n          produto: this.state.produto,\r\n          id: Date.now(),\r\n          qtd: this.state.qtd,\r\n          preco: 0.00,\r\n          subTotal: 0.00,\r\n          riscado: false\r\n        };\r\n        this.setState(state => ({\r\n          itens: state.itens.concat(newItem),\r\n          produto: '',\r\n          qtd: 1\r\n        }));\r\n      }//fim do método adicionarItem()\r\n\r\n      soma = (indice, novoValor) => {\r\n        //alert(\"indice: \" + indice + \"; novo valor: \" + novoValor);\r\n        //var subTotalAntigo;\r\n        this.setState({total: (this.state.total - this.state.itens[indice].subTotal) + (this.state.itens[indice].qtd * novoValor)})\r\n        this.setState( state => {\r\n          const itens = state.itens.map( (item, pos) => {\r\n            if(pos === indice){\r\n              //alert(\"índice: \" + pos + \"; novo valor: \" + novoValor + \"; valor antigo: \" + item.preco);\r\n\r\n              //Esse trecho exibe um warning no console\r\n              //this.state.total = (this.state.total - item.subTotal) + (item.qtd * novoValor);\r\n              //Abaixo está a correção do warning\r\n              //this.setState({total: (this.state.total - item.subTotal) + (item.qtd * novoValor)})\r\n\r\n              //subTotalAntigo = item.subTotal;\r\n\r\n              item.subTotal = item.qtd * novoValor;\r\n              item.preco = novoValor;\r\n              return item;\r\n            } else {\r\n              return item;\r\n            }\r\n          });//fim da funçao map\r\n\r\n          return{\r\n            itens,\r\n          };\r\n\r\n        });//fim de setState\r\n        //this.setState({total: (this.state.total - subTotalAntigo) + (this.state.itens[indice].qtd * novoValor)})\r\n\r\n      }//fim da funçao soma\r\n\r\n      modificaQtd = (indice, novoQtd) => {\r\n        this.setState({total: (this.state.total - this.state.itens[indice].subTotal) + (this.state.itens[indice].preco * novoQtd)})\r\n        this.setState( state => {\r\n          const itens = state.itens.map( (item, pos) => {\r\n            if(pos === indice){\r\n              //A linha abaixo dispara um warning no console\r\n              //this.state.total = (this.state.total - item.subTotal) + (item.preco * novoQtd);\r\n              //A linha abaixo corrige as mensagens de warning\r\n              //this.setState({total: (this.state.total - item.subTotal) + (item.preco * novoQtd)})\r\n              item.subTotal = item.preco * novoQtd;\r\n              item.qtd = novoQtd;\r\n              return item;\r\n            } else {\r\n              return item;\r\n            }\r\n          });//fim de map\r\n\r\n          return{\r\n            itens,\r\n          };\r\n        });//fim do setState\r\n      }\r\n\r\n      deletaItem = (indice, produto, subtotal) => {\r\n        \r\n        if( window.confirm(\"Deseja deletar o item \" + produto + \"?\") ) {\r\n          this.setState({total: this.state.total - subtotal});\r\n          this.setState(state => {\r\n            const itens = state.itens.filter((item, pos) => indice !== pos);\r\n            /*this.setState(state => ({\r\n              total: this.state.total - subtotal\r\n            }));*/\r\n            return {\r\n              itens,\r\n            };\r\n          });\r\n        }\r\n      };\r\n\r\n      modificaProduto = (indice, novoNome) => {\r\n        this.setState( state => {\r\n          const itens = state.itens.map( (item, pos) => {\r\n            if(pos === indice){\r\n              item.produto = novoNome;\r\n              return item;\r\n            } else {\r\n              return item;\r\n            }\r\n          });//fim de map\r\n\r\n          return{\r\n            itens,\r\n          };\r\n        });//fim do setState\r\n      }\r\n\r\n      riscarItem = (indice) => {\r\n        this.setState( state => {\r\n          const itens = state.itens.map( (item, pos) => {\r\n            if(pos === indice){\r\n              item.riscado = !item.riscado;\r\n              return item;\r\n            } else {\r\n              return item;\r\n            }\r\n          });//fim de map\r\n\r\n          return{\r\n            itens,\r\n          };\r\n        });//fim do setState\r\n      }\r\n\r\n}//fim da classe (component) lista\r\n\r\nfunction Item (props) {\r\n    \r\n    return <> {props.itens.map( (item, indice) => (\r\n            //antes era umItem\r\n            <div className=\"umItem\" key={item.id} style={{opacity: item.riscado ? 0.5 : 1}}>\r\n                <input type=\"checkbox\" name=\"riscar\" id=\"\" onChange={e => {props.risca(indice)}}></input>\r\n                <input type=\"text\" defaultValue={item.produto} className=\"campo\" id=\"tfProd\" onChange={e => {props.modProd(indice, e.target.value)} }></input>\r\n                <label htmlFor=\"preco\"> R$ </label>\r\n                <input type=\"text\" className=\"campo\" id=\"tfPreco\" onChange={e =>{props.somaPreco(indice, +e.target.value)}}></input>\r\n                <label htmlFor=\"qtd\">   Qtd. </label>\r\n                <input type=\"number\" value={item.qtd} min=\"1\" className=\"campo\" id=\"tfQtd\" onChange={e =>{props.modQtd(indice, +e.target.value)}}></input>\r\n                <span> Subtotal R$ </span> {item.subTotal}\r\n                <a href=\"/#\" id=\"linkDel\" onClick={e => {props.del(indice, item.produto, item.subTotal)} }>\r\n                  <img src={imagem} alt={\"Remover\"} height={\"20px\"}/>\r\n                </a>\r\n           </div>\r\n           ))}\r\n          </>\r\n}\r\n\r\nReactDOM.render(\r\n    <Lista></Lista>,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}